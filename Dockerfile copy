# Use a Debian-based Linux image with explicit architecture
FROM --platform=linux/amd64 debian:buster

# Set the working directory
WORKDIR /app

RUN apt-get update && apt-get install -y \
    wget \
    xdg-utils \
    fonts-liberation \
    libappindicator3-1 \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libgdk-pixbuf2.0-0 \
    libnspr4 \
    libnss3 \
    libx11-xcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxi6 \
    libxtst6 \
    libcurl3-gnutls \
    libcurl3-nss \
    libcurl4 \
    libu2f-udev \
    libvulkan1 \
    ca-certificates \
    libgbm1 \
    unzip \
    firefox-esr \
    xvfb \
    x11-apps \
    --no-install-recommends


# Set display environment variable
ENV DISPLAY=:99

# Install Google Chrome
RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && dpkg -i google-chrome-stable_current_amd64.deb || apt-get install -f -y \
    && rm google-chrome-stable_current_amd64.deb

# Install Firefox
RUN apt-get update && apt-get install -y firefox-esr \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Check Firefox version
RUN firefox --version | tee /firefox_version.txt

# Check Chrome version
RUN google-chrome --version | tee /chrome_version.txt

# Download and install ChromeDriver using static URL
RUN wget -O chromedriver.zip "https://storage.googleapis.com/chrome-for-testing-public/124.0.6367.91/linux64/chromedriver-linux64.zip" \
    && unzip chromedriver.zip -d /usr/local/bin \
    && find /usr/local/bin -name 'chromedriver' -exec mv {} /usr/local/bin/chromedriver \; \
    && rm chromedriver.zip \
    && chmod +x /usr/local/bin/chromedriver

# Download and install GeckoDriver v0.34.0
RUN wget -O geckodriver.tar.gz "https://github.com/mozilla/geckodriver/releases/download/v0.34.0/geckodriver-v0.34.0-linux-aarch64.tar.gz" \
    && tar -xzf geckodriver.tar.gz -C /usr/local/bin \
    && rm geckodriver.tar.gz \
    && chmod +x /usr/local/bin/geckodriver

# Install Python and dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    && pip3 install selenium

# Cleanup unnecessary files
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy the application's files to the container
COPY . /app

# Start Xvfb in the background
CMD Xvfb :99 -screen 0 1024x768x16 &

# Run the Python script when the container starts
CMD ["python3", "app.py", "1", "5"]
